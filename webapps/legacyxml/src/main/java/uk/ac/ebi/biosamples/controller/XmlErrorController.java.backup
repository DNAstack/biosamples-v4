package uk.ac.ebi.biosamples.controller;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
import uk.ac.ebi.biosamples.model.CustomXmlError;

import javax.servlet.http.HttpServletRequest;
import java.security.InvalidParameterException;

@ControllerAdvice
public class XmlErrorController extends ResponseEntityExceptionHandler {

    @Override
    protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, HttpHeaders headers, HttpStatus status, WebRequest request) {
        return new ResponseEntity<Object>(new CustomXmlError(status, (body!=null)? body.toString() : ex.getLocalizedMessage()), headers, status);
    }


    @ExceptionHandler(InvalidParameterException.class)
    protected ResponseEntity<Object> handleInvalidParameterException(HttpServletRequest req, InvalidParameterException ex) {
        HttpStatus status = HttpStatus.BAD_REQUEST;
        Object body = ex.getLocalizedMessage();
        return new ResponseEntity<>(new CustomXmlError(status, (body!=null)? body.toString() : ex.getLocalizedMessage()), null, status);
    }

    @ExceptionHandler(Exception.class)
    protected ResponseEntity<Object> handleGenericException(HttpServletRequest req, Exception ex) {
        HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR;
        return getExceptionResponseEntity(status, ex);
    }


    private ResponseEntity<Object> getExceptionResponseEntity(HttpStatus status, Exception ex) {
        return new ResponseEntity<>(new CustomXmlError(status, ex.getLocalizedMessage()), null, status);

    }
}
